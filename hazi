using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace hazi
{
    class Program
    {
        //a k 0 2 kerékcsere mind1 mettől meddig
        //Beolvasni a menetrendet adatok elhelyezése kiírás, foglalási rendszer átgondolása/megírása
        static List<Ember> FajlBeolvasas(string utvonal, string fajlnev)
        {
            StreamReader r = new StreamReader(utvonal + fajlnev);
            List<Ember> emberek = new List<Ember>();
            while (!r.EndOfStream)
            {
                List<string> adatok = r.ReadLine().Split(' ').ToList();
                Ember sv = new Ember();
                sv.vezetekNev = adatok[0];
                sv.keresztNev = new List<string>();
                sv.MunkaKor = new List<char>();
                for (int i = 1; i < adatok.Count; i++)
                {
                    if (adatok[i].Length > 1)
                    {
                        sv.keresztNev.Add(adatok[i]);
                    }
                    else
                    {
                        sv.MunkaKor.Add(Convert.ToChar(adatok[i]));
                    }
                }
                sv.munkaido = new List<bool>();
                for (int i = 0; i < 10; i++)
                {
                    sv.munkaido.Add(true);
                }
                emberek.Add(sv);
            }
            r.Close();
            return emberek;
        }
        static void KiirasMonoGram(List<Ember> emberek)
        {
            for (int i = 0; i < emberek.Count; i++)
            {
                Console.WriteLine(MonoGramEgysoros(emberek[i]));
            }
        }
        static string MonoGramEgysoros(Ember ember) => (ember.vezetekNev[0] + string.Concat(ember.keresztNev.Select(k => k[0]))).ToLower();
        static void Kiiras(List<Ember> emberek) => Console.WriteLine(string.Join("\n", emberek.Select(ember => ember.vezetekNev + " " + string.Join(" ", ember.keresztNev) + " " + string.Join(" ", ember.MunkaKor) + "" + string.Joint(" ", ember.munkaOra))));
        static void Main(string[] args)
        {
            List<Ember> emberek = FajlBeolvasas("", "nevek.txt");
            Kiiras(emberek);
            Console.WriteLine();
            KiirasMonoGram(emberek);
            Console.ReadKey();
        }
    }
}
struct Ember
{
    public string vezetekNev;
    public List<string> keresztNev;
    public List<char> MunkaKor;
    public List<bool> munkaido;
}


using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace _09_06_ismetles
{
    class Program
    {
        public struct Ember
        {
            public string vnev;
            public List<string> knev;
            public string munkakor;
            public List<bool> munkaido;
        }
// k 0 2; mindegy mettől, két óra 
// Fájlbeolvasás, el kell gondolkozni azon, hogy....

        static List<Ember> fajlBeolvasas(string utvonal, string fajlnev)
        {
            StreamReader sr = new StreamReader(utvonal+fajlnev);
            List<Ember> emberek = new List<Ember>();
           
            while (!sr.EndOfStream)
            {
                List<string> adatok = sr.ReadLine().Split(' ').ToList();
                Ember sv = new Ember();
                sv.vnev = adatok[0];
                sv.knev = new List<string>();

                //while (adatok.Count > i)
                //{
                //    sv.knev += adatok[i];
                //    i++;
                //}
                for (int i = 1; i < adatok.Count-1; i++)
                {
                    sv.knev.Add( adatok[i]);
                }
                //sv.monogram = Monogram(sv);
                sv.munkakor = adatok.Last();
                sv.munkaido = new List<bool>();
                for (int i = 0; i < 10; i++)

                {
                    sv.munkaido.Add(true); //Szabad: true ;foglalt: false
                }
                emberek.Add(sv);
            }
            sr.Close();
            return emberek;
        }

        //gyakorló feladat: 10 órás munkaidő egy óra uzsónna és 1 óra ebéd szünet (ötletek, nem kód) logaritmikus keresés, helyben rendezés
        static void kiirMonogram(List<Ember> emberek)
        {
            //for (int i = 0; i < emberek.Count; i++)
            //{
            //    Console.WriteLine(Monogram(emberek[i]));
            //}

            //foreach(var ember in emberek)
            //{
            //    Console.WriteLine(Monogram(ember));
            //}

            emberek.ForEach(ember => Console.WriteLine(Monogram(ember)));

            //Console.WriteLine(string.Join("\n",emberek.Select(ember=>Monogram(ember))));
        }

        static string Monogram(Ember e)
        {
            
            //string mono = e.vnev[0].ToString();
            //for (int i = 0; i < e.knev.Count; i++)
            //{
            //    mono += e.knev[i][0];
            //}
            //return mono;

            //foreach(var k in e.knev)
            //{
            //    mono += k[0];
            //}

            

            return e.vnev[0]+string.Concat(e.knev.Select(k=> k[0]));
        }

        static void kiiratas(List<Ember> emberek)
        {
            //for (int i = 0; i < emberek.Count; i++)
            //{
            //    Console.Write($"{emberek[i].vnev} ");
            //    for (int j = 0; j < emberek[i].knev.Count; j++)
            //    {
            //        Console.Write(emberek[i].knev[j] + " ");

            //    }

            //    Console.WriteLine(emberek[i].monogram);
            //}

            //foreach (var ember in emberek)
            //{
            //    Console.Write($"{ember.vnev} ");
            //    foreach (var k in ember.knev)
            //    {
            //        Console.Write($"{k} ");
            //    }
            //    Console.WriteLine();
            //}

            //emberek.ForEach(ember => Console.WriteLine($"{ember.vnev} {string.Join(" ", ember.knev)}"));

            Console.WriteLine(string.Join("\n", emberek.Select(ember => ember.vnev + " " + string.Join(" ", ember.knev))));

            //ötödik egysoros kiíratás, (ilyen függvények segítségével kiíratni, de másképp) 
            
        }
        static void Main(string[] args)
        {
            List<Ember> emberek = fajlBeolvasas("","ilovemanu.txt");
            kiiratas(emberek);
            kiirMonogram(emberek);
            Console.ReadKey();
        }
    }
}

